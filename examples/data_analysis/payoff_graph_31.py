import matplotlib.pyplot as plt
import numpy as np
from collections import defaultdict
import re

class PayoffAnalyzer:
    """
    A class to analyze and visualize payoff data for different strategy compositions.
    """
    
    def __init__(self, payoff_data=None):
        """
        Initialize the analyzer with payoff data.
        
        Args:
            payoff_data (dict): Dictionary with keys as strategy profiles and values as 
                               lists of payoffs [strategy1_payoffs, strategy2_payoffs]
        """
        self.payoff_data = payoff_data or {}
        self.processed_data = []
    
    def parse_strategy_key(self, key):
        """
        Parse strategy composition from key string.
        
        Args:
            key (str): Key string like "[MELO_0_100:5, MELO_100_0:26]"
            
        Returns:
            tuple: (strategy1_count, strategy2_count, strategy1_name, strategy2_name)
        """
        # Default strategy names
        strategy1_name = "Strategy 1"
        strategy2_name = "Strategy 2"
        
        # Try to extract strategy names and counts
        pattern = r'\[([^:]+):(\d+)(?:,\s*([^:]+):(\d+))?\]'
        match = re.search(pattern, key)
        
        if match:
            strategy1_name = match.group(1).replace('_', '-')
            count1 = int(match.group(2))
            
            if match.group(3) and match.group(4):
                strategy2_name = match.group(3).replace('_', '-')
                count2 = int(match.group(4))
            else:
                count2 = 0
                
            return count1, count2, strategy1_name, strategy2_name
        
        return 0, 0, strategy1_name, strategy2_name
    
    def process_data(self, sort_by='count1'):
        """
        Process the raw payoff data into a format suitable for visualization.
        
        Args:
            sort_by (str): How to sort the data. Options:
                - 'count1': Sort by first strategy count (ascending)
                - 'count2': Sort by second strategy count (ascending)
                - 'total': Sort by total number of agents (ascending)
                - 'ratio': Sort by ratio of count1/(count1+count2) (ascending)
                - 'composition': Sort by composition for better visualization
        """
        self.processed_data = []
        
        for key, payoffs in self.payoff_data.items():
            count1, count2, name1, name2 = self.parse_strategy_key(key)
            
            # Get payoffs for each strategy
            payoffs1 = payoffs[0] if len(payoffs) > 0 else []
            payoffs2 = payoffs[1] if len(payoffs) > 1 else []
            
            # Calculate statistics
            mean1 = np.mean(payoffs1) if payoffs1 else np.nan
            std_err1 = np.std(payoffs1, ddof=1) / np.sqrt(len(payoffs1)) if payoffs1 else 0
            
            mean2 = np.mean(payoffs2) if payoffs2 else np.nan
            std_err2 = np.std(payoffs2, ddof=1) / np.sqrt(len(payoffs2)) if payoffs2 else 0
            
            total_agents = count1 + count2
            ratio = count1 / total_agents if total_agents > 0 else 0
            
            self.processed_data.append({
                'count1': count1,
                'count2': count2,
                'name1': name1,
                'name2': name2,
                'mean1': mean1,
                'std_err1': std_err1,
                'mean2': mean2,
                'std_err2': std_err2,
                'total_agents': total_agents,
                'ratio': ratio,
                'label': f"{name1}:{count1}, {name2}:{count2}",
                'payoffs1': payoffs1,
                'payoffs2': payoffs2
            })
        
        # Sort based on the specified method
        if sort_by == 'count1':
            self.processed_data.sort(key=lambda x: x['count1'])
        elif sort_by == 'count2':
            self.processed_data.sort(key=lambda x: x['count2'])
        elif sort_by == 'total':
            self.processed_data.sort(key=lambda x: x['total_agents'])
        elif sort_by == 'ratio':
            self.processed_data.sort(key=lambda x: x['ratio'])
        elif sort_by == 'composition':
            # Sort by ratio, but handle edge cases better for visualization
            self.processed_data.sort(key=lambda x: (x['ratio'], x['total_agents']))
        
        return self.processed_data
    
    def plot_payoffs(self, title="Average Payoffs by Strategy Composition", 
                    figsize=(12, 6), show_error_bars=False, colors=None, sort_by='composition'):
        """
        Create a bar plot of average payoffs.
        
        Args:
            title (str): Plot title
            figsize (tuple): Figure size
            show_error_bars (bool): Whether to show error bars
            colors (list): Colors for the bars [color1, color2]
            sort_by (str): How to sort the bars ('count1', 'count2', 'total', 'ratio', 'composition')
        """
        if not self.processed_data:
            self.process_data(sort_by=sort_by)
        
        # Default colors
        if colors is None:
            colors = ["#9ace69", "#44a2f0"]
        
        # Prepare data for plotting
        labels = [d['label'] for d in self.processed_data]
        means1 = [d['mean1'] if not np.isnan(d['mean1']) else 0 for d in self.processed_data]
        means2 = [d['mean2'] if not np.isnan(d['mean2']) else 0 for d in self.processed_data]
        
        if show_error_bars:
            std_errs1 = [d['std_err1'] if not np.isnan(d['mean1']) else 0 for d in self.processed_data]
            std_errs2 = [d['std_err2'] if not np.isnan(d['mean2']) else 0 for d in self.processed_data]
        else:
            std_errs1 = std_errs2 = None
        
        # Create plot
        x = np.arange(len(labels))
        width = 0.35
        
        fig, ax = plt.subplots(figsize=figsize)
        
        # Get strategy names for legend
        strategy1_label = self.processed_data[0]['name1'] if self.processed_data else "Strategy 1"
        strategy2_label = self.processed_data[0]['name2'] if self.processed_data else "Strategy 2"
        
        rects1 = ax.bar(x - width/2, means1, width, 
                       label=f'{strategy1_label} Strategy',
                       yerr=std_errs1, capsize=5, color=colors[0])
        rects2 = ax.bar(x + width/2, means2, width,
                       label=f'{strategy2_label} Strategy', 
                       yerr=std_errs2, capsize=5, color=colors[1])
        
        # Formatting
        ax.set_ylabel('Average Payoff', fontsize=18)
        ax.set_title(title, fontsize=18)
        ax.set_xlabel('Strategy Profiles', fontsize=18)
        ax.set_xticks(x)
        ax.set_xticklabels(labels, rotation=45, ha='right', fontsize=16)
        ax.legend(fontsize=16, loc='lower right')
        ax.tick_params(axis='y', labelsize=15)
        
        plt.tight_layout()
        return fig, ax
    
    def get_summary_stats(self, sort_by='composition'):
        """
        Get summary statistics for all strategy compositions.
        
        Args:
            sort_by (str): How to sort the results
        """
        if not self.processed_data:
            self.process_data(sort_by=sort_by)
        
        summary = []
        for data in self.processed_data:
            summary.append({
                'composition': data['label'],
                'strategy1_count': data['count1'],
                'strategy2_count': data['count2'],
                'total_agents': data['total_agents'],
                'ratio': data['ratio'],
                'strategy1_mean': data['mean1'],
                'strategy1_std_err': data['std_err1'],
                'strategy1_n': len(data['payoffs1']),
                'strategy2_mean': data['mean2'],
                'strategy2_std_err': data['std_err2'],
                'strategy2_n': len(data['payoffs2'])
            })
        
        return summary

# Example usage with the provided data
def main():
    # Your original payoff data
    payoff_vectors = {
  "[MELO_0_100:5, MELO_100_0:26]": [[10617.285272131348, 12632.36396706543, 15567.32139937744, 17956.120144921875, 13002.69536836548], [14573.760938635254, 9582.533871044921, 27259.70180415039, 13038.960757263183, 19778.111209570314, 16469.087120373537, 17468.852262365723, 9032.735645446777, 23929.31882628174, 13003.83051369629, 21966.545745251464, 17792.677018823244, 20613.259144714357, 18066.807493798828, 17228.79414128418, 12498.90677392578, 10844.877761523438, 13402.564974621582, 11495.534835266113, 18984.212154577635, 18290.4333024292, 9395.43878782959, 16090.06644802246, 18703.88076376953, 17718.241703637694, 15738.849767260743]],
  "[MELO_0_100:19, MELO_100_0:12]": [[11596.699433203124, 10980.529235644532, 12959.570293518067, 9408.898844335938, 13387.964593945313, 11725.083969250489, 14294.662239416504, 16890.437272680665, 8656.559547375487, 14319.508491162109, 9395.521771875, 21429.304895092773, 18164.366642199708, 22505.908542687986, 25563.912414575196, 17399.01075670166, 19144.034822198486, 16800.83265336914, 20477.96969777832], [16499.665883874513, 19064.270588879393, 20189.075477001952, 22172.98785546875, 25830.258763391113, 22619.910665863037, 21452.671787756346, 20394.295812335204, 19320.813812365723, 22411.306467266844, 20687.235179650877, 16182.624782714844]],
  "[MELO_0_100:20, MELO_100_0:11]": [[11633.72430232544, 9152.676731005859, 13180.204457104492, 18837.30413601074, 14141.875407250976, 12763.565094360352, 11674.135853625488, 19306.76215650635, 12186.672415258789, 11320.808370349121, 5129.961597290039, 19586.701539828493, 18939.998325830078, 18887.3328024292, 21899.218003100585, 21197.92895731201, 22150.345104736327, 22528.1522335083, 17824.91579909668, 22298.29626493225], [19665.541856958007, 16456.391046606444, 19304.660728625488, 17273.43367770996, 23109.30765793457, 21567.34755805664, 25847.0225107666, 19205.787993017577, 19552.577919384767, 18953.562354663085, 21152.8654004776]],
  "[MELO_0_100:12, MELO_100_0:19]": [[19655.532059350586, 18494.838119458007, 18626.51727758789, 13082.347273364257, 14355.81613059082, 22047.865246142577, 17196.793993395997, 15925.057552487946, 19829.066947583007, 20679.04669107666, 22644.28962515259, 18773.375760888674], [16398.822489013673, 23448.33467019043, 21237.356464160155, 11157.245194000245, 18855.122070422363, 13501.314232836914, 14183.576330151367, 10704.847494897462, 13913.024195751954, 12081.245344189452, 15448.489065795899, 17671.247006420897, 12563.564298217774, 18800.869971057127, 8774.068899719237, 14310.590435668946, 18519.523028222655, 13091.753416430663, 11387.885127905274]],
  "[MELO_0_100:24, MELO_100_0:7]": [[8246.422828540039, 9374.86793022461, 10633.191191882324, 14200.587593261718, 11355.997152294922, 14415.872985998536, 3037.7844336669923, 17636.83523347168, 22540.243066500854, 24983.597868261717, 21538.211958154297, 21988.822423950194, 17676.503820999147, 21299.220902129364, 21347.086853564455, 21135.515450927734, 22253.68016295166, 18470.242867932127, 22848.159674072267, 21428.541249365233, 20534.23396755371, 20103.221489611817, 20231.5377168457, 19742.854363220216], [21450.46337515869, 24300.8616673584, 18683.30716748047, 25456.189364331054, 19888.271841003418, 17093.697351556395, 20028.250433251953]],
  "[MELO_0_100:28, MELO_100_0:3]": [[11250.707024609375, 5965.986429577637, 8871.333484814453, 17640.616351049805, 20567.80012207031, 21101.165604766844, 23441.09993413086, 21363.797493432616, 22203.420738916015, 15614.04812243042, 21782.26388914795, 18856.694375231935, 22824.62616723633, 18891.64629407959, 24305.62153452759, 27685.663217785645, 23545.370217175292, 22309.34679971924, 21805.8377222168, 19656.52179631348, 21315.914646850586, 23646.09587581787, 17836.154745336913, 19711.49877604065, 25022.766472268675, 21804.528435479737, 24545.133704589844, 20552.64663203125], [18789.578059106447, 16633.70040283203, 24278.623468304442]],
  "[MELO_0_100:15, MELO_100_0:16]": [[16063.589763848877, 15281.708709448241, 17496.63135061035, 20971.012837573242, 19288.49080831299, 24866.06189633789, 20822.291890780638, 14162.871475854492, 21920.012591833496, 18847.869015441895, 20809.47545637207, 22587.32481916504, 18450.62188918457, 18804.003222241212, 19718.550054962157], [17192.63895958252, 13321.750422113037, 11236.235903283692, 18171.52099172363, 10693.493635717774, 14931.873224877929, 22142.247723583983, 14115.498519091796, 7188.902502893066, 11314.354000065612, 11345.777270947267, 15700.120445019531, 14542.226682128907, 12869.710739941407, 13448.251677893066, 15985.542251318358]],
  "[MELO_0_100:10, MELO_100_0:21]": [[18432.322731640626, 15169.470313195801, 15680.651129187012, 15586.110859936523, 24468.569879833984, 18549.90961324463, 19054.421759875488, 16649.719297680665, 12551.282398376465, 19863.050779174806], [13524.45503996582, 18610.433865478517, 15128.781693933106, 18248.37430908203, 13935.501087695313, 19056.8601416687, 16193.759760375977, 17420.57184958496, 15732.334111450195, 14173.739584191895, 11337.395150952148, 17363.118158984376, 18686.60131763916, 17252.334706896974, 6765.884901660156, 17851.70866138916, 17841.7552798584, 16935.218090136717, 16252.10968293457, 13637.739927294922, 19541.540567840577]],
  "[MELO_0_100:16, MELO_100_0:15]": [[15206.230396850586, 10683.776917504883, 17709.34666850586, 11810.075094775391, 16808.775392529296, 13371.613571411133, 11468.771727478028, 11058.952789672852, 14599.499345324706, 12910.32796381836, 10566.970812255859, 20222.44168677368, 14337.080751367188, 13919.387239697266, 9258.54585222168, 19555.567600378417], [18891.99219663086, 21562.77925095215, 20438.8733329834, 20793.369611987306, 25156.1148776001, 20565.61285834961, 16077.380277539063, 20146.840727740477, 19640.79946278076, 17901.441617236327, 17484.245950097655, 17859.752791772462, 16832.532637036133, 21497.422523413086, 19535.423802612306]],
  "[MELO_0_100:11, MELO_100_0:20]": [[19268.537124621584, 13401.281806518555, 16537.533286975096, 19041.75913074646, 19628.150481433106, 20073.713384729002, 15802.230997387695, 19550.004446362305, 20685.17638305664, 16791.925376123047, 20632.59816142578], [22793.847335705566, 10868.088467877198, 18250.74392890625, 13396.829541918945, 10972.341752819824, 9738.856935180664, 22919.37279489746, 15675.891384082031, 17729.095687475587, 23267.455731726073, 16749.260505041504, 13490.39104255371, 18484.930653924752, 24131.115615527342, 9987.253000598144, 17391.853572241213, 6669.382708972168, 16351.205322753905, 13000.079409045411, 18440.140830200195]],
  "[MELO_0_100:26, MELO_100_0:5]": [[11116.002122372436, 17062.899508764647, 14281.657081555175, 9688.754472399902, 13678.147532128905, 24094.897629272462, 24988.364854211424, 21196.090998144533, 19480.879384350585, 17200.08725526123, 19767.85960755005, 20207.840277624513, 22266.535470835875, 23851.00869193115, 23381.89685808716, 19074.512124951172, 22474.355046325683, 21799.957579547117, 22001.53266298828, 18372.129888537598, 20585.3478921875, 18340.438649554442, 19541.977670724486, 25886.615421557617, 24866.97627142334, 17581.340679003908], [21671.206419946287, 23314.250609228515, 19547.7431805542, 16933.211547863768, 20479.560046154784]],
  "[MELO_0_100:14, MELO_100_0:17]": [[14799.619408483886, 16553.862954418946, 18404.507704296873, 18071.525840234375, 18609.793937683105, 19204.221166210937, 20091.537609985353, 17289.234865527345, 23909.73593363037, 21399.676161901854, 16978.68247512207, 24286.092763598634, 17695.934088092043, 20961.686133483887], [12058.542118847656, 14051.720838342286, 18608.414879833985, 16596.734250195314, 13427.875959106444, 17612.70556071777, 18175.669557543944, 18777.379245458986, 16943.855358544923, 12744.415521777344, 10397.555164923097, 14437.447670166015, 21170.397079364015, 8638.51477692871, 15394.56630180664, 12760.829333813477, 11077.480127392579]],
  "[MELO_0_100:25, MELO_100_0:6]": [[7122.529211584472, 9431.659355371094, 15736.11003203125, 18252.456587609864, 9536.303026855468, 11984.249134375, 24311.347058068848, 22446.507975439454, 23766.266406115723, 19493.105117749023, 21287.673453637697, 24228.187209594726, 22462.324412854003, 22864.549889294434, 17506.7288340332, 22595.152393847657, 19266.29865744629, 19043.548978344726, 16813.06098022461, 19251.328974682616, 22869.486362231444, 21978.735804882814, 16912.108338720704, 22969.970786828613, 19338.088811483765], [20522.87214552002, 19236.694686480714, 21928.691146032714, 24958.026444519044, 21830.832910375975, 17590.86838059082]],
  "[MELO_0_100:9, MELO_100_0:22]": [[16587.85755126953, 19241.142640960694, 18197.311374584962, 18171.234914990233, 17340.103200305177, 13297.205067456054, 15915.738637158203, 18636.635909301756, 18206.66873876953], [14775.367691764068, 13736.952962109375, 13876.293392230225, 20828.81290341797, 13001.602609838867, 20207.848097070313, 17556.03364941406, 16338.0023453125, 19862.092684509276, 14965.357315478515, 18369.34294482422, 17148.713999139403, 14825.75624987793, 10236.323799487305, 15742.788296704102, 16680.42263342285, 12928.882422680665, 20817.526416149904, 20606.22051282959, 17042.94883477783, 13953.380825036622, 4537.8286450927735]],
  "[MELO_0_100:8, MELO_100_0:23]": [[17033.87706419678, 18264.546796264647, 16550.520724047852, 16854.443293225097, 15917.503878686524, 15541.747073287965, 15937.022423217773, 17065.391220324706], [14144.303134765625, 11087.648223193359, 13787.295658361816, 18643.682975073243, 21154.07790871582, 16961.22020228882, 13139.160831933594, 23485.077343066405, 19373.00462878418, 13756.832217211913, 16179.595596240235, 20296.17232536621, 16213.067061291504, 17265.59376682129, 11350.148314794922, 11677.235948498535, 5043.216631762695, 18886.757380688476, 16484.481285665894, 18100.90356123047, 19122.047481518555, 15874.639563208008, 11838.386606689453]],
  "[MELO_0_100:29, MELO_100_0:2]": [[10439.012642529296, 7111.437985986328, 20419.363136083983, 23412.910374780273, 21213.91718876953, 21675.140483703613, 20616.924006713867, 19457.763000769042, 18382.46032463379, 20803.94482352295, 21024.959961035158, 20735.62357574463, 23703.438646380615, 25753.599350805664, 25863.492378552248, 22881.5533832489, 22551.992353564452, 19122.78107857666, 21045.82185753784, 22902.502871240235, 19075.711160253908, 20984.69772885132, 18172.230565661623, 18685.993985290526, 27241.980515515137, 15476.999221118163, 22177.328204528807, 21118.214889227296, 21989.093664923097], [21430.680279901124, 25203.45040055542]],
  "[MELO_0_100:6, MELO_100_0:25]": [[12721.877749398804, 17361.544994836426, 9638.941080407714, 17048.955414471435, 18816.984344787597, 14712.591355407714], [18038.673106884766, 14401.813062445068, 20520.545919699096, 22307.79922624512, 26402.67291772461, 12016.19101135254, 15969.307944995116, 15513.666140258789, 12803.515038061523, 17258.993986328125, 11085.349676757813, 14296.124699487305, 10523.88540822754, 20989.403433880616, 15930.366362402343, 16503.21445263672, 15546.099004394531, 12974.368910229492, 13467.284659082032, 14158.564345098877, 15225.873125561524, 15362.816388159179, 21901.65997758789, 17957.022376904297, 10331.372230432129]],
  "[MELO_0_100:22, MELO_100_0:9]": [[7670.177550244141, 12930.37691796875, 11912.822939453124, 10449.80693317871, 10468.323456469727, 12083.161146618653, 16172.699731851197, 6683.084735546875, 14196.127021923829, 17865.875785702516, 18277.060411004637, 19686.522110656737, 21242.674886257933, 22118.859595373535, 21736.888624365234, 23512.55803083496, 21438.424939025877, 22744.068210253907, 22606.865717871093, 18854.480958544922, 22482.10920867615, 21588.403748184202], [25137.98446382446, 19511.226865612793, 14773.094878112794, 21308.647676586916, 18766.50915214844, 19431.590247973632, 24770.1486416626, 16468.946470690917, 20436.432305517577]],
  "[MELO_100_0:31]": [[], [22289.684023327638, 18942.011631518555, 20875.120049914553, 18749.71496333008, 17091.743556152345, 18256.48741066284, 17497.205940185548, 18100.249219451904, 18435.910237060547, 18942.496674157715, 9658.45755654297, 15156.810059375, 21670.068444140627, 23245.633443450926, 16098.79695477295, 17605.53337746582, 15560.822132043457, 21435.44353425293, 25632.072534277344, 11272.70800595703, 17756.470736669922, 22190.88433355713, 17888.889860791016, 18571.822877539063, 18680.56709698486, 21067.06997585449, 21548.340929589845, 16553.910828552245, 20275.455879589845, 18992.245776177977, 17106.964371240236]],
  "[MELO_0_100:1, MELO_100_0:30]": [[0.0], [15901.770547583008, 16869.04702565918, 23183.98433885498, 17755.671388220217, 14835.68885630188, 13946.209653930664, 16110.016499926758, 16100.09888972168, 18794.464058447265, 16085.981647924804, 21252.048455737306, 14076.91913380127, 16640.39077923584, 16735.63247023926, 16995.534272509765, 11573.168445825195, 20661.933096673583, 13015.528202966309, 12332.064763549804, 16183.569197216797, 18056.07205744629, 19685.042193872072, 14695.789821099854, 15728.235382348634, 19475.782638330078, 19637.425984069825, 20084.612337982177, 15538.648752783203, 18426.00580687256, 14786.646250732421]],
  "[MELO_0_100:13, MELO_100_0:18]": [[20674.801040124512, 16562.02186845703, 15900.343591650391, 20233.48633808594, 19296.678794989013, 20153.636639489745, 19455.82478771973, 21513.156520599365, 20894.26218876953, 17456.328311364745, 18196.42620727539, 15333.671547399903, 17439.136697583006], [12105.794857702636, 12812.296511523438, 16689.35248048706, 13296.02658786621, 17750.28260490723, 21172.97510366211, 19704.583904632567, 10934.092212207031, 12624.287344689941, 14604.668430773925, 17252.31636690674, 15413.46223046875, 12800.043625, 18354.11350456543, 20078.312972680666, 14731.585950476074, 12772.77725888672, 10753.064527856446]],
  "[MELO_0_100:18, MELO_100_0:13]": [[17138.565860791015, 14529.080468798827, 15345.555791479492, 16912.50473491211, 12142.96587067871, 18404.479256433104, 10833.825587841797, 14361.904831079102, 12731.047799687194, 13737.072161669921, 13166.333238061523, 9541.24980604248, 12125.750623413085, 20377.24592598877, 18683.12565111084, 21140.172558203125, 15990.14016953125, 22847.384537475587], [20550.810505053712, 17575.051821648405, 19433.041178100586, 19459.08227647705, 25320.509897338867, 17632.05070550537, 21403.091611758424, 18767.85835717163, 18807.291006835938, 19153.376250524903, 22741.786166937254, 22613.197392333983, 18340.035615026856]],
  "[MELO_0_100:2, MELO_100_0:29]": [[5305.58031114502, 8177.394555697631], [9294.602441271973, 19312.9844993042, 15694.25590291748, 11052.909692504883, 21036.05976064453, 11295.717634887695, 14571.88458112793, 14048.948697387696, 18421.493838427734, 14322.814206726074, 15554.73757758789, 19538.517304541016, 11930.781400048829, 15404.121140747071, 20908.541906738283, 23564.22374468994, 12847.518408752441, 17495.547413696288, 15210.19547623291, 20662.675015234374, 20769.49913272705, 18170.094392675783, 18099.80819354248, 17510.219709863282, 15931.389083404541, 13347.22377060547, 19097.88230600586, 20381.44900773926, 17738.71403571167]],
  "[MELO_0_100:31]": [[22934.85455098877, 23571.992052209473, 19852.935274523927, 17573.042892663576, 23390.58593959961, 20997.11408479004, 22015.351019732665, 21230.51181793213, 22690.84984897461, 23790.691614208983, 23301.757638928222, 19506.834755841064, 21042.175598400878, 24364.67358232422, 19408.271212194824, 22284.60470661621, 23699.4269538208, 28239.845737939453, 19786.998287890627, 23298.465670776368, 20642.524058251955, 22512.058165478516, 20703.830352784727, 19303.332123254393, 23945.64604302368, 19908.393372546387, 19939.35125979004, 17508.53994356079, 19568.40315847168, 21159.73021604004, 19732.30358071289], []],
  "[MELO_0_100:27, MELO_100_0:4]": [[3769.3018138916013, 5011.386626945496, 13109.409951855469, 9657.483214282227, 20377.820985327147, 23415.32264416504, 20562.041578735352, 20977.976194946288, 21267.27041367798, 19091.632080249023, 21279.86236845703, 20849.824872955323, 23395.889383117676, 19862.93561942749, 21540.15881763916, 21436.837792358398, 18268.800881433104, 22031.2554168396, 23989.458572091677, 22463.77782815857, 23416.830823760985, 23017.270281652833, 23321.604081176756, 19132.09986305542, 25010.766639230347, 21841.385659191896, 19464.776674267578], [20690.24539741211, 18521.88079362793, 19218.42816940918, 18000.522608581545]],
  "[MELO_0_100:21, MELO_100_0:10]": [[18083.22645644531, 16837.311879541016, 5596.972069812012, 14460.907811743164, 15418.963400024413, 15687.160389160157, 8786.67152409668, 9732.24335859375, 13339.37693227539, 14524.24729411621, 22741.902325268555, 18727.99530489502, 24635.849409753417, 19538.37018466797, 22490.365626879884, 21015.434179040527, 21220.09422733154, 19680.151361999513, 17088.842842175294, 17001.65223050537, 18441.034450054933], [21926.30921160889, 22412.816641345216, 20332.92924465332, 23279.48955895691, 21401.693786328124, 17683.788215563964, 17631.080117956542, 19248.246923486327, 23735.086383996582, 19773.679488110352]],
  "[MELO_0_100:3, MELO_100_0:28]": [[13748.801253564454, 8773.708197729493, 8999.855834387206], [23550.196101287842, 21252.194915722655, 19005.95467246094, 11764.615409765625, 21748.539988330078, 20059.287155581664, 16479.82667739258, 22808.432795947265, 13242.60076682129, 15684.451567004395, 24485.182474243164, 14722.846880456544, 16119.721523144532, 17942.414140002442, 14414.481743969727, 9332.811363330078, 18610.19064163208, 10778.357985546874, 17605.600617529297, 12734.830971948242, 25494.087270361328, 16138.956109802246, 20435.129297998046, 14656.251533679198, 12019.18247890625, 14850.652414135742, 21851.461170239258, 16614.759954821777]],
  "[MELO_0_100:23, MELO_100_0:8]": [[9726.328072583008, 10759.28141772461, 9842.927414233398, 15244.03069411621, 14664.107844580078, 9786.48791878662, 9648.420296191407, 21314.634517944334, 17452.48821010742, 15799.901255859375, 21259.83237788086, 15983.562097763062, 21525.378260180663, 26819.997562524415, 23539.39213609619, 21854.587519140627, 26530.982582958983, 18158.791775115966, 19768.903670458985, 22846.236657373047, 17052.11842006836, 22895.69964268799, 20412.009167846678], [18216.09748088379, 21376.6433352478, 23311.240128173828, 16110.629402392578, 18425.116543444823, 21236.64500397949, 25289.195934472657, 23350.023241308594]],
  "[MELO_0_100:4, MELO_100_0:27]": [[12760.634171923828, 12246.336017852784, 16186.827316125487, 9043.8763092041], [16419.8265022583, 14867.438012463379, 21078.363775805665, 15109.827988183593, 19845.70422097168, 12253.799923876953, 15906.903107946777, 18166.58481272583, 22984.086710668944, 13106.318539318847, 12945.003695068359, 15556.787128649903, 16428.31256315918, 12305.589857836914, 8320.269319970703, 25561.166146606447, 11240.436231539918, 12429.071484179687, 15524.958490515137, 22120.17413165283, 17006.61140834961, 24297.86229638672, 14926.37419395752, 15227.355228540038, 17289.9149795166, 19257.858735180664, 16145.675359667968]],
  "[MELO_0_100:30, MELO_100_0:1]": [[7273.778160705567, 18520.844359057617, 25176.22181663208, 21929.13377376709, 16102.629063787841, 21550.423583605956, 22802.666104107666, 20133.85613812256, 22643.01264914551, 24052.412086340333, 19755.31512480469, 21394.423030200196, 21171.762018603516, 20604.966388220215, 24403.9043711853, 20362.842087817382, 23140.38488276062, 21260.67447229004, 22293.48709437561, 22385.074452087403, 18494.237595983886, 18751.96940449219, 24994.707536035155, 24564.563716894532, 18420.844152270507, 18933.06152208252, 21416.206069873046, 20775.752602459717, 20382.040178686522, 21582.084172875977], [26247.128209960938]],
  "[MELO_0_100:7, MELO_100_0:24]": [[12904.183318737792, 16524.47134050293, 14698.422726403809, 19000.874108966065, 12781.852322961426, 17201.59654232178, 17624.872322613526], [14451.37436866455, 19944.01553483887, 20601.3932557251, 16272.839109033202, 15739.63150439453, 16021.491002392579, 22083.751510925293, 16452.42633983154, 13034.04068515625, 19612.916812963867, 15343.721760375976, 13515.730361206055, 18716.451054101562, 16087.347626708985, 14161.267831689453, 14973.48981171875, 17047.041675683595, 20867.57487770996, 14203.95267565918, 12113.650936865235, 10251.9071647583, 18056.370447338868, 9423.556686541748, 18488.57892788086]],
  "[MELO_0_100:17, MELO_100_0:14]": [[17273.508215405272, 17638.158470214843, 15162.928354711914, 9949.209754858399, 7775.102096594238, 15817.343516015624, 9698.737773254394, 20052.018310302734, 11468.507415136719, 13023.301027124024, 9683.90479906006, 13385.56781755371, 16085.570730834961, 15913.883117773437, 21336.349627197265, 18014.64332730713, 17349.341129711913], [22392.79701364746, 17778.38300842285, 27438.43707015381, 19893.085545471193, 17400.85770788574, 22145.042214526366, 19213.725151794435, 18105.579648657225, 20274.357218188477, 21198.400551135255, 17452.29511179199, 16909.611659387207, 20489.64658642578, 20417.14609589844]]
}
    
    # Create analyzer and process data
    analyzer = PayoffAnalyzer(payoff_vectors)
    
    # Generate plot with different sorting options
    fig, ax = analyzer.plot_payoffs(
        title="Average Payoffs by Strategy Composition (Holding Period = 140)",
        show_error_bars=True,
        sort_by='composition'  # Options: 'count1', 'count2', 'total', 'ratio', 'composition'
    )
    
    # Show plot
    plt.show()
    
    # Print summary statistics
    print("\nSummary Statistics:")
    print("-" * 80)
    for stat in analyzer.get_summary_stats():
        print(f"Composition: {stat['composition']}")
        print(f"  Strategy 1: Mean={stat['strategy1_mean']:.2f}, SE={stat['strategy1_std_err']:.2f}, N={stat['strategy1_n']}")
        print(f"  Strategy 2: Mean={stat['strategy2_mean']:.2f}, SE={stat['strategy2_std_err']:.2f}, N={stat['strategy2_n']}")
        print()

if __name__ == "__main__":
    main()